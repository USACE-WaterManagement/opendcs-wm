---
name: Release
on:
  workflow_call:
    inputs:
      branch:
       type: string
       required: true
      nightly:
        type: boolean
        required: true
    secrets:
      token:
       required: false
    outputs:
      apps_image:
        description: App image tag for downstream consumption
        value: ${{ jobs.release.outputs.apps_image }}
      lrgs_image:
        description: Lrgs image
        value: ${{ jobs.release.outputs.lrgs_image }}
      migration_image:
        description: Database Migration image
        value: ${{ jobs.release.outputs.migration_image }}
      api_image:
        description: REST API/UI Image
        value: ${{ jobs.release.outputs.api_image }}
  workflow_dispatch:
    inputs:
      branch:
        type: choice
        required: true
        description: Which Branch to make the build from
        options:
          - develop
      nightly:
        type: boolean
        required: true
        description: Is this part of a "nightly" workflow?
        default: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
        packages: write
        contents: write
    outputs:
      apps_image: ${{steps.build_image.outputs.apps_image}}
      lrgs_image: ${{steps.build_image.outputs.lrgs_image}}
      migration_image: ${{steps.build_image.outputs.migration_image}}
      api_image: ${{steps.build_image.outputs.api_image}}
    steps:
      - name: checkout code
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{inputs.branch}}
      - name: Set version
        if: inputs.nightly == true
        run: echo "VERSION=${{inputs.branch}}-nightly" >> $GITHUB_ENV
      - name: Set version
        if: inputs.nightly == false
        run: echo "VERSION=${{inputs.branch}}" >> $GITHUB_ENV
      - name: show version
        run: echo ${VERSION}
      - name: Log in to the Container registry
        id: login-ghcr
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.token != null && secrets.token || secrets.GITHUB_TOKEN }}
      - name: Build docker image
        id: build_image
        env:
          IMAGE_TAG: ${{env.VERSION}}
        run: |
          REPO=`echo "${{github.repository}}" | tr  '[:upper:]' '[:lower:]'`
          echo "REPO=$REPO" >> $GITHUB_ENV
          docker build -t opendcs-api:build-latest -f Dockerfile.api .
          docker build -t opendcs-lrgs:build-latest --target=lrgs .
          docker build -t opendcs-apps:build-latest --target=apps .
          docker build -t opendcs-migration:build-latest --target=migration .
          docker tag opendcs-api:build-latest ghcr.io/${REPO}/opendcs-api:$VERSION
          docker tag opendcs-lrgs:build-latest ghcr.io/${REPO}/opendcs-lrgs:$VERSION
          docker tag opendcs-apps:build-latest ghcr.io/${REPO}/opendcs-apps:$VERSION
          docker tag opendcs-migration:build-latest ghcr.io/${REPO}/opendcs-migration:$VERSION
          docker push ghcr.io/${REPO}/opendcs-api:$VERSION
          docker push ghcr.io/${REPO}/opendcs-lrgs:$VERSION
          docker push ghcr.io/${REPO}/opendcs-apps:$VERSION
          docker push ghcr.io/${REPO}/opendcs-migration:$VERSION
          echo "apps_image=ghcr.io/${REPO}/opendcs-apps:$VERSION" >> $GITHUB_OUTPUT
          echo "lrgs_image=ghcr.io/${REPO}/opendcs-lrgs:$VERSION" >> $GITHUB_OUTPUT
          echo "migration_image=ghcr.io/${REPO}/opendcs-migration:$VERSION" >> $GITHUB_OUTPUT
          echo "api_image=ghcr.io/${REPO}/opendcs-api:$VERSION" >> $GITHUB_OUTPUT
      - name: Logout of GH registry
        if: ${{ always() }}
        run: |
          docker logout ${{ steps.login-ghcr.outputs.registry }}